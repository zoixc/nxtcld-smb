name: Build and Push Nextcloud SMB (light)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'  # Раз в сутки в 02:00 UTC

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get today’s date
        id: date
        run: echo "today=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx (for digest check)
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Get latest nextcloud:stable digest (amd64)
        id: get_digest
        run: |
          DIGEST=$(docker buildx imagetools inspect nextcloud:stable \
            --format '{{range .Manifest.Manifests}}{{if eq .Platform.architecture "amd64"}}{{.Digest}}{{end}}{{end}}')

          if [[ -z "$DIGEST" || "$DIGEST" == "null" ]]; then
            echo "❌ Failed to get valid digest from Docker Hub"
            exit 1
          fi

          echo "digest=$DIGEST" >> $GITHUB_OUTPUT

      - name: Read last stored digest
        id: read_last_digest
        run: |
          if [[ -f .base_digest_light ]]; then
            echo "last_digest=$(cat .base_digest_light)" >> $GITHUB_OUTPUT
          else
            echo "last_digest=" >> $GITHUB_OUTPUT
          fi

      - name: Check if base image digest changed
        id: compare_digest
        run: |
          if [[ "${{ steps.get_digest.outputs.digest }}" != "${{ steps.read_last_digest.outputs.last_digest }}" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU
        if: steps.compare_digest.outputs.changed == 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx (for build)
        if: steps.compare_digest.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to DockerHub
        if: steps.compare_digest.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push multi-arch Docker image
        if: steps.compare_digest.outputs.changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.light
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: |
            ptabi/nxtcld-smb:light
            ptabi/nxtcld-smb:light-${{ steps.date.outputs.today }}

      - name: Save updated digest
        if: steps.compare_digest.outputs.changed == 'true'
        run: echo "${{ steps.get_digest.outputs.digest }}" > .base_digest_light

      - name: Commit updated digest
        if: steps.compare_digest.outputs.changed == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git pull --rebase || git fetch --all
          git add .base_digest_light
          git commit -m "Update base digest for nextcloud:stable"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main

      - name: Install crane
        if: steps.compare_digest.outputs.changed == 'true'
        run: |
          curl -sSL https://github.com/google/go-containerregistry/releases/latest/download/go-containerregistry_Linux_x86_64.tar.gz \
          | tar -xz -C /usr/local/bin crane

      - name: Delete old date-based Docker tags (older than 10 days)
        if: steps.compare_digest.outputs.changed == 'true'
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          IMAGE=ptabi/nxtcld-smb
          crane ls $IMAGE --auth basic --username=$DOCKERHUB_USERNAME --password=$DOCKERHUB_TOKEN > tags.txt

          NOW=$(date +%s)
          while IFS= read -r TAG; do
            if [[ "$TAG" == "light" ]]; then continue; fi
            if [[ "$TAG" =~ ^light-[0-9]{8}$ ]]; then
              TAG_DATE="${TAG#light-}"
              TAG_TS=$(date -d "$TAG_DATE" +%s 2>/dev/null || echo 0)
              AGE=$(( (NOW - TAG_TS) / 86400 ))
              if (( AGE > 10 )); then
                echo "Deleting old tag: $TAG"
                crane delete $IMAGE:$TAG --auth basic --username=$DOCKERHUB_USERNAME --password=$DOCKERHUB_TOKEN
              fi
            fi
          done < tags.txt
